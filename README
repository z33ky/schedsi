schedsi - a scheduling simulator

This tool generates scheduling charts given scheduling algorithms and some threads.

Since I'm working on a hierarchical operating system, hierarchical scheduling is of interest to me,
and as such this tool supports building process hierarchies and stack schedulers long that hierarchy.
Each process, referred to as `Module`, has its own scheduler, which gets executed by a `VCPUThread` of the parent.
A single scheduler taking care of a bunch of threads is easily done by just using a single `Module` owning all threads.

The graph gets written as a SVG and to present hierarchical scheduling they are not in the usual Gnatt chart where time is on the horizontal axis and the threads have fixed positions on the vertical axis.
Time still flows horizontally, but the vertical axis represents the depth of the hierarchy. Threads can be differentiated by their ID written on the bar.
Context switches are also modeled to take time (though it can be set to 0) and are also drawn as triangles going up or down the vertical axis.

A simple example is in `examples/kernel.py`. You can also read `HACKING` for an overview of the inner workings.
The example script produces a binary log file (MessagePack). To view the log you can use `./replay.py` to convert it to either a text log or a SVG graph.
The `replay` tool can be installed as `schedsi-replay` using the provided `./setup.py` file (or the `install` make target).
